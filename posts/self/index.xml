<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Paladnix Blog Site</title>
    <link>https://Paladnix.github.io/posts/self/</link>
    <description>Recent content on Paladnix Blog Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 09 Jul 2018 03:41:30 +0000</lastBuildDate><atom:link href="https://Paladnix.github.io/posts/self/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>创业者</title>
      <link>https://Paladnix.github.io/posts/self/fight/</link>
      <pubDate>Mon, 09 Jul 2018 03:41:30 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/fight/</guid>
      <description>其实这一次算是第一次正式的作为一个创业者，在创业。
我这个人 # 我的性格里埋藏着创业者基因。我终究会走上创业的路。 这是很久以前，当我还是个中学生的时候就有了的心理准备。当我开始思考以后要做什么工作的时候，我总是看不到我在什么岗位上会有比较好的表现。我对自己的认知好像一直都还算准确，一般都会有点超出自己的实际能力吗，不过也都是努力一下或者说，运气好一点就达成的高度。 因此我常常会从一个独立的从业者角度去思考问题，因为找不到自己的位置。并且对于家里面的找个稳定工作的想法也有些本能的排斥，所以我其实一直都准备好了去创业。
刚上大学没多久，我在社团中的经历让我发现自己找不到一个合适的位置可能还有一个原因，就是我的实际能力在什么位置都有很多剩余。这些剩余会让我在考虑问题的时候超出我的岗位范围。一旦开始思考这些更大局一些的东西，就会感觉目前拥有的权利无法实践自己的想法，因此也不适合待在一个太小的位置上。 对市场经济学的了解、对心理学的把握和直觉、对基本规律的探察，等等这些，让我会思考很多，有思考，有结论，就会有决定，所以我应该是做决定的一个角色，否则会活着很压抑。
我不认为创业一定要搞个几百亿的上市公司才算是创业。我理解的创业是开辟战场。相比较进入一个竞争激烈的行业并在其中立足，我更倾向于去开辟一个新的战场。或许很多资本都想要新的战场，但是没有这么多机会。 我对自己的定位差不多是个破局者，因为思维具有一点点创造性，性格中有冒险精神，勇气和风险把握，还有点固执，追求完美。最重要的是，无所牵挂。
作为一个程序员，创业其实会简单点，因为自己可以做开发，这是笔不小的开销，省下了。 所以在学习计算机专业的过程中，我努力把自己打造成一个单兵作战能力很强的特种兵。学习使用各种装备，以期在需要的时候用最直接的方式解决需求。
上帝送给创业者的一脚飞踹 # 创业的念头真正形成是今年的4月份，这种感觉越来越强烈，但是仅仅是感觉到自己要创业了，但是并不知道要做些什么，所以有一点点的焦虑，想尽快的做完手头的毕业设计然后来思考这件重大的事情。 等到5月份的时候，一切之前的铺垫都将创业的方向指向了一个我最熟知的领域。我好像也暂时想不出什么其他的东西。那就朝这个方向去吧。
当方向确定以后，还是不知道具体怎么做，从哪开始，做什么？ 整天处于迷茫和乐观的辗转状态。这样又过了半个月，逐渐的放下了毕设的包袱，心情轻松很多，也更乐观了。仔细的分析了一下自己有什么，要付出什么。 结果很感人，就是自己什么都没有。除了不多的时间、开发能力、竞赛经验和知识。 足够了，这些东西不用，放着也是放着，用了，就算什么都没得到也不亏，至少自己的开发经验又得到了提升。
做好了心理准备，接下来就是找个东西开始干吧。 市场在哪？从哪下手？什么周期？
摆在我面前的选择，其实还是很少，甚至是没有选择，根本就没啥路能走。 思考了许久，掂量着徐州这个市场能不能受的了我的新模式。掂量来掂量去，也不确定。 时间就这么往前走，我选定了徐州这个市场，但是我不懂怎么打开它，我甚至还没有非常了解这个市场。我给自己定了个时间，6.4日，徐州邀请赛过后要解决这个问题。
我直到比赛结束了，我还是不知道我接下来这一步该往哪里下脚。我只知道我明天就得有答案，明天得去一中一趟。 怎么有答案？去一中做什么？找谁？怎么说？ 不知道。
那个傍晚和晚上，我站在徐州市中心，看着这个我生活了10几年的城市，太陌生了。 曾经我做为这个城市的一部分，在内部游走。现在我要站在这个城市的面前，打开他。忽然感觉这个城市太大了，根本无从下手。
我跟一些人讲了自己要创业，但是具体的创业方案，也都是含糊其辞，往往都是“等到。。。时候就知道了。”这种答案，我也跟这些人说我明天就要解决一些问题，要确定下来了。 或许就是这些dead line起的心理作用，让我没有像以前一样退缩。虽然我都不知道今晚要住哪，下一步该往东还是该往西走。曾经只敢打打嘴炮，真到要硬着头皮往前走的时候基本都会退堂鼓震天响。
找了个市中心比较便宜的宾馆，住下了。 下午比赛身体很不舒服，没睡好，被晒了一小时，特别困，已经无法思考了。肾结石也在今天突然痛起来。 勉强睡了半小时，受不了了。得去医院。 把自己收拾一下，不带多余的物品，出门，医院不远，穿过广场，对面就是。询问前台、挂号、做B超。。。突然特别的有礼貌，觉得自己跟这座城市有一点点不一样了。不像那么豪放了，倒是有很多苏州的从容和优雅。 从医院出来，大概也没那么疼了。华灯初上，徐州这座城市的节奏还是很慢的，毕竟故乡，触景生情。 大概是肾结石闹的，把精力转移了，没有过多的担心明天的事情，干脆鸵鸟心态，不管了，先逛逛以前常去的地方，真的很感慨。 把病历和检查单什么的都撕巴撕巴扔垃圾桶，手插裤兜走走吧。走着走着，当年高中的感觉又有点回来了，孤独、傲气、不屑，悲怆的英雄主义。
走了一圈，回到了宾馆，睡吧。努力了半天，十点多，还没睡着。 算了，刚好楼下KTV，唱歌去吧。 开了个房间，专心的唱歌了。
3点多，终于困意来了。睡到了10点。
醒过来的时候，才是真的崩溃。 这次是真的没法躲了，说这明天，明天已经到了，而且都10点了，上午基本做不了什么了，如果不赶快安排，下午也做不了什么了。 硬是在床上坐了1个小时。 要不算了，回苏州吧，徐州就这样，什么城市，什么市场，自己心理没点B数吗。。 不行，啥都是自己分析的，没有实地接触过，不能这么搞。
最后还是逼了自己一把，给高中班主任发消息，“老师，下午去学校找你。”
只要没了后路，剩下的就好办了。准备去吧！ 想了1个小时，也没斟酌出该怎么开口自己创业的事情，怎么打听怎么问。都快走到学校门口了，才想起来两手空空啊。 路边买了两个最大的西瓜，拎着上五楼，手指差点都断了。
来都来了，不知道怎么开口就不开吧，先叙叙旧。三心二意，有的没的。
有的时候，就是运气好。同办公室居然是信息学老师。剩下的事情，就顺理成章了。
1个小时，完全碰运气的一个小时，谈成了。
创业者的兴奋剂 # 那个时候我还不能理解，为什么总说：“创业者都是幸福的”。 这句话是到今天我才刚刚能理解。 今天晚上，收到消息，报名不理想，也就意味着，今年的规模很小，基本不赚钱。突然一下我感觉我的兴奋剂就断了，一下子跌出了之前一个多月的高昂的士气。
过去的这一个多月，我一个人，前端、后端、数据库、判题核心。夜以继日，根本不累好吧。什么是饿？什么是休息？不存在的。 我一天能在键盘上写13个小时代码，就是这么疯狂。 我系统的整理了react、redux、router、reduxApi这些前端的库，又搞了restful的jersey，然后是redis数据库。在此之前，我从未用其中任何一个写过完整的项目。从前到后，js、java、shell、node、redis。。。 这一个月，耗尽了我三年的工程知识，用尽了我在阿里学来的功夫，又自己打通了多少的小体系。我三年都在准备，结果三年的准备没抵过这一个月的成长。
创业者都是幸福的，你完全没有痛苦，那个希望给你夜以继日，给你不知疲倦，连调整状态都不需要，就是这么强劲。
创业者的乐趣 # 今晚听说不太理想，虽然短暂的跌出了兴奋状态，但是需要调整一下心态和战略，重新加入战局，继续战斗。 创业不是一锤子买卖，就是这样不断的把握市场，生生的撬开市场的脑袋。</description>
    </item>
    
    <item>
      <title>再出发</title>
      <link>https://Paladnix.github.io/posts/self/self-2/</link>
      <pubDate>Mon, 25 Jun 2018 01:40:29 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/self-2/</guid>
      <description>永远都不要太乐观，也别放弃
最近一段时间作为一个完整的开发工程师来做一个项目，一方便希望能经过一个完整的项目的锻炼把自己的工程底子建立一下，总不能一直飘在算法上，还是要掌握程序员的最低生存本钱的。
这一次的工程算是一个比较熟悉的，依然是Online Judge，只是这次不再是以一个极客的思维来对待，而是以一个解决问题的工程师的身份。
曾经用极客的思维去考虑这些部分，心里想的是怎么造出更好的轮子。在这个过程中其实需要学习很多底层的东西，尤其是对于Judge核心的设计和实现是要很多关于操作系统的交互。
但是到最后也没能自己搞出来什么比较好的东西，只能说是搞了一些还不错的玩具出来了。同时对底层的一些机制有了个粗浅的理解。
我本质是非常喜欢打通基本的原理的，有些东西没有搞懂总是不太想去动手，怕自己走歪了路，搞得不专业了。这样的追求是我的喜好，并不能作为一个常态存在，因为毕竟学无止境，更多的时候应该是做一个工程师存在。工程师是要 能够非常高效且优质的组织资源去解决问题的，而不是纠结在底层的原理如何如何。当然越是经验丰富、知识扎实的工程师的组织能力越强。
这次我的主要尝试选择了两个我比较看好的，也处于中间状态的技术：
前端： react、redux、node 后端： jerey、tomcat、redis、mysql、mybatis 前后端完全分离的架构 这样的技术选择其实是面有点大的，基本涵盖了整个前后端，因此这个项目的周期中会遇到许许多多的实际问题。 主要的会表现在：
前端 # react体系的架构 项目结构的设计 UI操作 浏览器相关问题 异步请求 这其中前期已经基本能用起来的react体系，算是已经过了一关，后面的浏览器相关的异步请求让我感觉有点头大。 一方面用的不是传统的ajax，是新兴的fetch。在使用fetch的时候又使用了redux-api的库，这个库国内很少人使用，基本没有中文的文档也没有什么人踩坑的经验，所以在理解和使用的时候都很慢。 不过这个过程中也让我学会了怎么去接触一个新的库，其实看文档是一方面，更快速的方法是搭建起来，不断的输出一些东西，这些变量是什么，什么结构的，会比文档直观很多。这个也是在后期的理解的时候才想起来，所以导致前面的搞的还是很痛苦的。
但是现在面临着一些问题，搞得我多线作战很是迷茫。
问题是这样 ：
fetch原生的操作会让浏览器自动的补全content-type， 但是不知道为什么，使用redux-api库的时候就无法补全这个项，导致一些请求的请求头有问题，需要手动编写。尤其是在上传文件上。 其次后台选取的java强类型语言，对请求的type要求非常严格，如果使用的是浏览器自动生成的type，可能会不匹配。同时后台也可以使用更原始的方式，就是直接接收context的内容，得到一个request自己再操作，其实这是以前的javaweb的操作方式。 现在就面临了一个选择的问题，到底是后端做出让步还是前端做出让步？ 虽然都是我在写，但是面临这样结构改动还是很纠结。
~~ 出去吃了一顿饭。顿悟
转变思维 # 不存在能解决一切问题的框架，所以不能一味的寻求框架解决方案。完美主义的人会比较痛苦。
因为没有什么框架能解决你的所有问题，也不是什么问题都有正解的，所以要站的高才能获得好的设计。一定要站的足够高，如果不能高到技术之上，就高到需求之上，高到架构之上，才能在设计出合理的架构。
抽出框架最优越的特性，用来实现一些需求，其他并不适合用这种框架来解决的问题就不要再死守在框架上了。
问题迎刃而解。
有的时候就是要跟自己多讲讲道理，就明白了。可能这就是分裂的好处吧。不是一个人在战斗。</description>
    </item>
    
    <item>
      <title>阶段性总结</title>
      <link>https://Paladnix.github.io/posts/self/self-1/</link>
      <pubDate>Fri, 27 Oct 2017 00:07:31 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/self-1/</guid>
      <description>从九月以来，我做的事情和状态在这里总结一下。
值得xx的事 # 九月份我忘记了我在做一个什么事情，好像是一个项目。
我从阿里回来苏州以后，先是5号要考科目三，于是就练车到了5号。 在5号过后，我在准备保研的事情，打印材料，复习一下C语言。这期间看了一多半的《C和指针》。然后貌似我还看了一个什么的文档，记不起来了，我操这记忆力。
保研是在什么时候，貌似是在18号。然后就是等待结果。 我当时确实在忙一个什么东西。 然而找了半天并没有找到什么记录，我草，可能是被续掉了吧。害怕害怕。。。
然后去了一趟北京，回来了。然后打打网络赛，然后收拾心情回家过了个国庆。 从国庆回来，然后开始尝试Node， react，做兼职。一直到去沈阳比赛。在沈阳打了个金牌回来，心情还不错。 去沈阳比赛回来就接了NOIP讲课的锅，到了现在。
总之，这两个月过的异常的快，而且也异常的忙。突然从实习生回到学校里，没有了主业，也没有了方向。然后又突然从中科院的研究生回到了苏大的研究生，整个心境也就不一样了。
这是一段心态转变的时间。之前总是有一点毕业生的感觉，所以做事的效率非常的额低，一点都没有实习工作时候的那种紧迫。过了几天好日子。休息够了，也给了自己一个大坑。整个人都清醒了起来。
接下来要做的事情 # 这个接下来应该有长期有短期。
短期来看 # 最近15天，我需要做的是NOIP和React并行，暂且将一些系统瞎搞的事情放一下。 然后OJ也要能运行，让对接的老师来尝试。
再稍微长一点，可以借助这次NOIP的机会调整一下自己竞赛的思路，重新规划一下自己的知识点。重点转移到看白书上来，要形成一点章法。
中期来看 # 最近三个月我的主要精力还是两个方面，一个是竞赛，一个是react和python的兼职。 两个的量都不小，我的键盘灵敏度也被我调的非常高，这样可以在一定程度上督促自己加快速度，保持兴奋。
对于react和py，都需要系统一点的来搞。就以这个项目为基础吧。
除了主流的技术，还有一些顺带的技术流： Git，Github，Node。
长期一点 # 在上面两个能够处理好的情况下，继续处理一点系统的工作工具。
这个真的很麻烦。
待续&amp;hellip; # </description>
    </item>
    
    <item>
      <title>一个决定</title>
      <link>https://Paladnix.github.io/posts/self/myheart/</link>
      <pubDate>Wed, 20 Sep 2017 21:39:35 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/myheart/</guid>
      <description>终于我还是follow my heart.
今天下午，我找了我的准未来导师&amp;ndash;刘偲老师，简单的聊了一下。然后，我决定不留在这里&amp;ndash;中国科学院信息工程研究所。
推免的面试，各个学校基本接近尾声，没有什么机会去别的学校再试试，我选择留在苏州大学NLP组。
当张民老师问我为什么的时候，让我说出两个不留在研究所的理由。我脑子里只有一个，我不喜欢这里。
这是一个很重要的决定，对任何人来说。并且对很多人来说，我的这个决定都是脑子进水了。
计算机是我的爱好 # 上半年选择学校的时候，我就没想去投学校，直接投了研究所。 我希望自己的研究生生活能够花的有意义，去学习更多的更深的东西，虽然我也知道全是靠自己，但是可能研究所的人更靠谱吧。我希望研究所的高要求能让我更有压力不去浪费时间。
做自己喜欢的事，是人生最幸运的事，我很幸运。 其实无论在哪里，自律都是第一要素，我不该去利用其他人的要求去压制自己的懒惰，我应该从自己的性格中剔除懒惰，才能持续发展。
我生命中有一个很重要的人，一个让我钦佩的，活生生的人&amp;ndash;张冉，我的初中同学都了解那是怎样的人。平台从来不是限制他的因素，够优秀，并且足够自信自己会优秀。我没有他那么厉害，但我觉得在自己喜欢的事业上，我可以做到。
我需要一个环境 # 来到研究所两天，我很不适应。环境真的不容乐观，北京又在严打，各类餐馆被关停，吃的很差，住的地方也出了点问题，交通也很不方便，工位的空调也很不好，泰坦显卡的发热量又很大，我几乎隔20分钟就要洗一次脸才能静下来，耳机已经完全不管用了。 很多人会觉得怎么这么矫情，如果在以前，这绝不会让我选择离开。 我很不喜欢这个环境，不适合我静下来做事情。 对于编程和算法这类工作来说，环境是最重要的基础。在理工楼101，我可以从早上11点坐到凌晨3点去写代码。也不会有人来打扰我。（要跟女朋友道歉，来找我还会被我凶）
在来这里之前，我觉得中科院的环境应该非常好吧，毕竟是国家重点实验室。 但是很不幸，我还是太天真了。学生的生存条件并没有那么得到重视，我以为这里应该以人为本，本来就没有多少人，就更该把环境搞好才行吧。我的师兄们只好每人一个风扇，甚至两个，一个给机器一个给自己。 从他们跟我聊天的语气中，我听到很无奈，习惯就好。我也很佩服他们，环境这么差，还要做很多工作。
在这样的环境，我很难保证自己的情绪不会影响自己做事情，所以我要慎重的考虑这个因素。
我很担心未来三年的处境 # 在一开始，导师跟我提出几点要求：
要花时间。 要服从安排。 在信工所的两天里，我看到的这些人，都很苦恼，一点都不快乐。 选择来这样的地方不该是非常喜欢这份事业的吗？这样的样子很奇怪。 花时间，对我来说，时间除了睡觉，就是在电脑前面了。不成问题。 但是服从安排，我就很没底了。毕竟听到很多人都说自己的导师如何压榨自己。 同时我又从师兄那里听到些不太好的东西。
对于我来说，我比较耿直，这些事情，对我来说很重要。 如果因为某些事情让我做东西很不开心，我绝对做不好，并且还浪费大量的时间。 听说有一个很厉害的师兄因为跟老师在一些任务上搞的不愉快被外派到其他学校交流去了。
我想，如果有这样的事情，我应该也会闹的不愉快吧。 我怀着对技术的赤诚，不想成为廉价的劳动力。
血里有风 # 我要的是自由的精神。
来过北京几次，我从未喜欢过这里。用今天认识的人的话说，对他来说，这里没有任何生活的气息。 这里是政治中心，在中国，我永远不想沾边的东西。 这里是经济中心，在这里，少有真诚。 &amp;hellip;
人生很短暂，三年很漫长。 做技术的人，应该都是我这样子。不耻那些偷奸耍滑，不屑那些争名夺利，用自己的能力换取自己应得的那份。 世界虽然很复杂，很坏。 但是我终将面对的，是我自己。并且实时面对的，也都是我自己。 活着，不为谁，为了自己开心。仅此而已。
在苏大会不甘心吗？ # 并不会。 其实我选择的是张民老师和苏州。
跟张民老师有很多接触，这个被苏大挖过来的NLP国内前沿学者，带着苏大的NLP排进了前5名。为人非常直接，可能是因为工作太多的缘故，惜时如金，绝不废话。 在我找他的时候，再三跟我说，你要考虑清楚，中科院的研究生跟苏大的研究生含金量不一样的，苏大保一个中科院非常难的，你有这个机会千万别傻。
刘偲老师也是CV圈比较厉害的，张民老师也是NLP圈很顶尖的。在这一维度，其实并没有什么区别，学校虽然差异很大，但是我毕业以后只能靠自己的能力。
所以关键是我自己，我愿意用三年的时间，在苏州学习，而不是北京。
人生是自己的，我应该为自己负责。</description>
    </item>
    
    <item>
      <title>实习转正答辩</title>
      <link>https://Paladnix.github.io/posts/self/alibaba/</link>
      <pubDate>Fri, 11 Aug 2017 16:05:42 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/alibaba/</guid>
      <description>今天下午进行了实习转正答辩，有很多经验总结下来。
走进工作岗位的几个阶段 # 首先第一个是实习生面试，这个在每年的春招的时候会进行，也就是我进入阿里巴巴进行的第一次6轮面试。那个面试的经历想比较今天的经历其实是比较简单的。
通过面试以后就算是一个试用期实习生了，大概会经历一个多月左右。实习生的试用期会做一些工作，并且这也是实习转正答辩的主要内容。
如果通过了实习转正答辩，那就是正式的实习生了，我也是最近才知道的，原来这个实习转正是从试用期实习生转到正式的实习生，可见整个工作的流程是比较复杂的，压力也不小。
在实习的后期跟你签了三方协议也只是一个录用意向的协议并没有法律效力。
在你实习结束以后正式入职还有一段试用期，时间一般跟你的签约年限有关。签的时间长试用期也就相应的长。
转正答辩的几点经验 # 在此次转正的答辩准备过程中，我觉得自己准备的比较好，但是忽略了一些情况，导致最后的发挥并不是很好。 这是经验的问题，因为接触的面试官不太多，所以在遇到某些问题的时候就脑子短路了。经验真的很重要，不同的面试官的关注重点都不一样，所以要不同的策略去应对。
本次在做答辩的之前，我自知自己的工程功底不强，所以在准备做的工作的同时，还做了多一手的准备，那就是我最擅长的算法方向。打算以此作为自己的优势去提升自己在工程深度上的不足。 毕竟我是刚入行Java的新手，做工程一定不如很多一直做工程的人，另一方面自己这一个月接触的项目虽然多，但是并没有什么太深度的难点，所以也没有机会去解决，也就没有什么工作的亮点可以展现。
我在工作的过程中自己学习了redis数据库中两个我认为比较有意义也比较有特点的算法，在我的博客中也写过。我通过这两个算法说明一个问题，就是数据库的发展方向可以脱离原本的通用解决方案，转为为特定场景设计实现算法来解决特定问题。
用这样具有前瞻性的眼光来凸显自己的价值。
这个方案在我做完ppt以后被我的师兄提出了没有意义。但是我坚持保留了这个东西。 随后在跟我的主管预汇报的过程中，主管表示很好，突出自己的优势而且这个思考很有价值。我觉得，这就是不同级别的人思维格局吧。东西就在那里，你能看到你才有可能拿到，看不到永远也拿不到。
答辩的时候，其中一个人是FastJson项目的作者，这就是没有意料的地方。我以为会是一个偏管理+一个偏工程+一个hr的阵容。但是这个偏工程的又有点偏算法，面试官熟算法倒不是什么问题，关键是我们的算法认知不同。这就非常的尴尬。
在第一个算法之后他问了一些算法的细节，尤其是在算法的最终实现是字符串还是int值的问题。 因为我本身是搞ACM的算法竞赛，这个竞赛的重点在于利用思维模型去解决问题，而不是去研究最底层的实现中节省掉的int和char之间的空间差距。当然我不是说这些东西不重要，当然重要。只是我并不去实现这个算法，所以也就没有去研究在实现的细节上是什么方式。另一方面，学习这个算法本身就不是我的工作范围，所以就没有时间去深究。 我只是想透过这个算法去发现数据库的最新发展方向。但是被面试官过于深入的带偏进入这么工程细节的问题是我没想到的。
这就是面试中的一个常见的问题：
同一个事情，关注点不同 # 我关注的是算法带给我的发展认知，面试官关注的是这个算法你有没有学的很深，有没有学到落地。 这很显然不是自己想去探讨的方向，所以这个时候要么你真的落地了，要么就要及时引导面试官到你的方向上去。但是最好的选择就是问不倒，无论你问什么我都能答出来，是最好。
如果要在这个时候引导其实是不好引导的。因为面试官本身以为自己难住你了，你强行避开这个问题就会被打上学艺不精的标签。你还必须得正面的、恰到好处的回答这个问题。
怎么回答这个问题呢，就要敢想，随机应变开始跟面试官讨论。比如面试官问你为什么不用int编码，这个时候你就要有个折中的回答，一般就要根据现实需要来选择存储的实现方式。随后千万不要贸然的回答问题，一定要把这个问题问的足够细以后再选择性的回答。在问问题的时候也要引导到你擅长的方向。当你说出根据不同的场景会有不同的实现方式的时候，就给了自己提问的主动权，就反问面试官你想比较他们两个之间的哪个方面，是解析时间上、计算上、存储上、取数据上等。然后不断的细化到一个用基础理论可以解决的问题，你就完成了完美的反杀。
一般计算机上的实现总是这样的，在时间和空间上取舍、在存数据速度和取数据速度上取舍、在计算方式上取舍。所以这样的问题总是能够曲线来回答的，千万不要慌。然而当时我就慌了，回答不是很完美。
有些面试官其实就是丢个问题给你，他自己也没有思考很多。所以当你开始跟他讨论的时候，把这个问题抛给他，如果他也没想清楚具体要问你什么，你就可以开始引导了。如果你熟悉算法的计算效率问题，那就往时间效率上引，你熟悉数据存储的东西就往存储上引。实在没有什么擅长的问题就跟他来这么几个来回，他也不会给你个差评的。往往有些时候深入下去，面试官本身也不擅长了，也就不深究了。
扩展出来问你 # 当你提到一个东西以后，面试官往往会扩展出来问你一些东西，问你既然懂这个你懂不懂其他的相关的啥啥啥。
这也是比较棘手的问题，事实上你也真的没有机会或时间去学习扩展那么多，毕竟你才学习了这几年，又要宽度又要深度是很难的，同样你也不能就直接避开这个问题。
对于这个问题，其实就没有上面的那么好扭转，你只能打打心理战。毕竟扩展的知识有哪些，你不知道也没办法把问题细化到可以理论解决的地步。我推荐的做法是变成一个弱者。去请教对方，这个东西还有哪些扩展，自己可能精力有限，或不是专业搞这个，就没有覆盖到那些。对方如果是个门清儿的专家，回答了你，你就赚了，你还有个好学的印象。如果对方也不懂就诈诈你，那他也就不会在这个问题上继续了。自己不会的东西，别人也不会也不会就给你差评的。
没见过的名词一定要问一下 # 然后在实现的细节上我们简单的交流了一些，他提到了前缀树。
尼玛，后来我才知道这个前缀树是字典树的别名，而且是20年前的名字。我说我不知道，我知道后缀树。后缀树的复杂度是字典树的10倍，但是这个面试官不知道。。。很遗憾这个问题又GG了。
所以遇到相关领域你没听说过的东西，就不太可能。面试官问出来的问题一定不会非常深入的东西，都应该是你至少听说过的东西。更何况我一个搞算法的怎么会没听过一种树结构呢？
这个时候应该就是叫法不同，问一下这个东西有没有什么别名，或是实现方式是什么。应该很快你就知道这个东西是什么了，即使不是很清楚，从一些信息中也能知道个原理大概，跟面试官简单吹吹还是可以的。
问我既然是学算法的，有哪些你会的不是教科书上的算法 # 这个问题，我草。我被问蒙了，我怎么知道哪个算法不是教科书上的算法啊！你说哪个不是书上的？ 然后这个问题我就跟没回答一样，说了一点疑惑和解释他就继续下一个了。
其实，面试官本身想问的问题，重点不是教科书。而我抓错了重点。他事实上是想问你有什么算法是一般人不会的，而你会。再换句话说，是他不会而你会的。
这样理解这个问题以后，尼玛，这不正中我下怀了。这简直就是装逼时刻，此时不装逼更待何时，打比赛的那些神奇算法名字往外扔就是喽，我特么能给你说一下午。
然而，我当时没有反应过来。失策失策。。。
总结了一下，一向唬得住面试官的我为什么犯这么低级的错误呢? 我认为就是被前面的几个问题给问虚了。几个出乎意料下来，整个人的气场都下来了。下面就开始被各种蹂躏。
所以，一定要不能虚，虚个蛋蛋。
一个堂堂金牌爷，总有你会他不会的东西，虚个蛋！就算他问的问题你不会，这又怎么了。要自信，老子又不干你的工作，干嘛会你的那套。况且我今天不会我明天就会，不行嘛！ 在此基础上，做到态度好，技术硬，来者不惧，能屈能伸。忽悠个面试官还是小菜一叠。</description>
    </item>
    
    <item>
      <title>关于实习-alibaba Middle Ware</title>
      <link>https://Paladnix.github.io/posts/self/internship/</link>
      <pubDate>Fri, 04 Aug 2017 19:14:43 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/internship/</guid>
      <description>阿里巴巴中间件团队是一个技术水平非常强的团队。
首先想谈一谈，实习本身，我对实习的认识。
作为一名技术向的学生，实习的经历是十分重要的。如果有机会，最好从大二的暑假就开始出去实习。事实上无论你是什么方向的学生，实习都是非常重要的。
实习有这么几个目的，这几个目的也是我在选择实习单位的重要考虑因素。
体验未来几十年的工作生活。 了解业界的真实现状。 学习新的技术。 检验自己的能力。 指导自己未来的路。 下面就具体的展开来说一说，个人见解。
体验未来的工作生活 # 这真的是最最重要的事情，因为你未来将有40年的时光在工作的状态，在你真正要走进这段时间之前能有一个实习的机会去体验这样的生活会让你做好很多准备。
在上学的时候特别渴望工作，觉得上学很无聊，也很不自由，也没有收入。但是从我听说的同学的工作经历，我看到的阿里巴巴杭州西溪园区的1万名员工的生活状态，我觉得实习的这重意义很重要。 不同的公司，不同的岗位，不同的同事，上级，城市&amp;hellip; 这些因素会让工作之间产生巨大的差异，你要在这段时间想清楚一些事情。
你要在什么样的岗位工作 你想跟什么样的人共事 你要在什么样的城市 &amp;hellip;.
而这些事情有一些原则，是我觉得在这些问题中很重要的东西。
第一，一定要做一件你喜欢的工作。如果你做什么事情不开心，做什么都没有意义。这个工作不是非你不可，但是你自己的心情只是你自己的。至于心情好才能工作好这样的东西，谁都懂的大道理就不用我多说了。我想说的是，当你心情不好在工作的那段时间，在以后的你看，是极大的罪恶，对自己生命的美好时光的罪恶，所以一定要把自己的时间用来做让自己开心的工作。
第二，一定要跟聪明人共事。因为与不聪明人共事会导致你工作的不开心。
第三，要在一个有交流的队伍里工作，后面会讲到为什么。
当你体验过后，就会明白自己想要的工作到底是什么样子。 这也是马云在前两年回应阿里校招大规模缩减时所说的：”我们想要的是清楚自己要什么的人，那些还不清楚自己的要什么的人让他们去其他地方搞清楚再来吧。“
了解业界的真实情况 # 都说学校学习的东西与现实脱轨，那么到底现实是什么样子，这就是最真实的现实了。至于学校教的东西怎么样，下面也会讲到。
但是了解业界真实情况并不是为了回答上面这个传闻，而是要清楚的明白自己所学所做的东西是否是正确的方向，
举个例子，我所在的存储事业部是阿里的重要数据库的开发运维团队。其使用的数据库技术与我在大学接触的数据库技术有何差异？差异很大，但是我在大学学习的东西并非被淘汰，也并非没有用处。阿里的业务规模决定了其数据库的并发抗压能力到了业界的顶尖水平，这一点是在学校以及其他公司所见不到的，在这些技术的发展上确实与以前我所认识的数据库差距很大，包括数据库集群这些东西我都是没有接触过，也没有老师有这方面教学的尝试。对此我只能表示很遗憾。还有就是我学习数据库的时候Nosql这种数据库已经被阿里应用出来了，而我们只是简单的了解了一些。
这些都是学校学习的不足。但是必须得说，学校中学习的数据库原理等课程是必须掌握，极其重要的，是这些技术的基石。所以学校的课程并没有脱离现实，只是我们可能更担忧自己跟不上技术潮流，其实没有必要，基础的知识是必须掌握的。
那么知道了业界的现实，也知道了工作的要求，在以后的学习中就不会在去问：我该学底层技术还是上层应用。当然都要学，都要会。那么应该先学那个？有时间就多学学底层，时间少至少要会应用。
学习新的技术 # 这就是在工作中的需要了，而不是自己的主观能动。 在工作的岗位上一定需要学习新的技术才能完成任务，所以这一点不必多解释。
但是需要说的是，如果仅仅学习了完成工作的那些，就浪费了这个好机会。
什么机会呢？应用场景。
以前的学习，更多是在知识层面，现在的学习是依托于现实需求，有机会在这个应用场景中学习。在用中学往往有更好的效果，所以要更深入一些，更广泛一些。更何况你周围有一群相关技术的专家可以请教。
这里就要讲一下上面提到的，要在一个有交流的队伍中工作。
这个时候就要想一下，实习的共作给你提供了最有价值的的东西是什么？除了以上我们讲到的这些和工资以外，就是你周围的人。
你周围的那些前辈给你简单的聊一聊的东西，都有可能需要别人很长时间才能获得，那些是可遇而不可求的&amp;ndash;经验。这个东西你能获得的越多，你要走的弯路就越少，对于一个在浩瀚技术点迷茫的人来说，可以节省好多时间。学习经验的代价比学习任何知识的代价都高，所以学技术不是最重要的，学经验才是真正要做的事情。
检验自己的能力 # 这个能力当然不是你曾经学到的东西，而是你的适应能力与学习能力。
新的环境，新的模式，新的技术。这些都在检验你的适应与学习能力，这决定了你换下一个工作之前要做的准备。
换工作是一个很正常的事情，各种原因。一但当你需要换工作的时候，你是否有足够的底气去换就决定了你是否能解决面临的困境。一个依靠长期业务经验工作的人，是底气不足的，一个能快速掌握新的工作技巧的人是很容易做到快乐工作的，因为你可以走嘛。当然如果是个人原因不适合工作，去哪也没用。
指导自己未来的路 # 接触了很多人，很多技术，很多经验。你就清楚的知道自己要去工作还是读书，是要去哪里工作去或是哪里读书。在未来的几年应该如何度过。
我的实习经历 # 面试 # 在偶然的机会碰到辅导员，让他给我参考一下简历，刚好他有在阿里工作的同学，就帮我做了内推投递。本以为内推会很轻松就进去，后来才知道，几乎大家都是内推，没什么区别。
面试一共6轮，5轮技术面试+hr面试。很吓人，确实是国内面试流程最长的公司之一了。
第一轮面试开始以后我就意识到自己贸然用阿里的面试来做第一次面试不是什么明智的选择。因为我根本就没有任何准备，包括自我介绍。
自我介绍是每次都要做的，因为每次都是不同的人。
面试的技术问题偏基础知识，操作系统原理，计算机网络，数据结构，数据库，算法，编译原理等。还会问一问你做过的项目等。
面试的过程有什么经验？不存在的，好好学习，多思考。
在hr面试的时候，会考察你的价值观和性格等，决定你是否适合这个团队，当然也会问一下你的未来打算。
入职工作 # 入职那天，有60人左右，10几个学生，2个本科生。还好，我跟他们聊的挺起劲。
加入团队的第一天晚上集体聚餐，团队有17个人左右，反正都是土豪，要么就是在成为土豪的路上。什么3套房产专业房产中介业余工程师的老司机，一套400万房产追尾修车灯6万的道爷。。。
每月团建出去吃饭，桌游这些是大多数公司标配，没啥好说。
工作的内容我也没挑，听安排，反正都是搬砖。但是工作第一天就给了我3个项目和三台服务器让我部署上去，我真的很绝望。
工作前期不是Java就是python，要么就是把一个python项目重写成java的。作为一个只会Java语法不会python语法的我，更绝望了。
到了现在，后端接口也要写，前端页面也要做。心很累。羡慕某为的某谈同学每天可以打打游戏就完成工作还可以领奖金。更羡慕某软的同学每天吃吃零食按时下班回家开黑。</description>
    </item>
    
    <item>
      <title>关于计算机科学的学习</title>
      <link>https://Paladnix.github.io/posts/self/howtolearn/</link>
      <pubDate>Sun, 09 Jul 2017 15:29:05 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/howtolearn/</guid>
      <description>这篇文章的标题写了很久都没有开始动笔去写，因为随着学习的宽度和深度不断的扩大，越来越不敢贸然的去写这么大的题目。
首先这个文章是我自己的经验和思考，要适合个人的情况。
如何学习新事物 # 抓住概念，触类旁通。
上面这个两个词是一个高度的概括。扩展出来分成两个方面，一个是如何抓住概念，一个是什么是触类旁通。
抓住概念 # 在传统的学科中，概念是十分清晰的，尤其是数学、物理学的表述。这样经过总结下来的概念是什么呢？ 就是描述这个事物的特点的严谨表述。 归根结底，现在科学发展的再高，也只是一种归纳，谁也无法确保数学的基础就是无法动摇的，物理学的基础还存在很多不同维度上的争议。所以现在的概念就是一种归纳。
这种归纳将这个事物独有的特征组合进行描述。符合了这个描述的东西我们就可以认为是这个东西。
所以当我们在分析事物的时候，除了我们本能主管可以判断的事物以外，我们就是利用这样的特征比对来进行分类判别。
为什么我们要进行分类判断，给这个东西一个定义呢？
为了应用前人的理论研究。举个例子，你知道一个直角三角形的两条直角边的长度，你想知道第三条边的长度，如果你不上升到理论的层次上去，你就只能去量。但是一旦你将这三个点上升到了直角三角形的理论分类中，接下来的思考就是理论上继续延伸出去，可以用三角函数、勾股定理等，在没有上升到理论层面的时候是直观的问题，上升到了理论上就是抽象的问题。
所谓科学与经验的区别，我认为某种程度上是直观与抽象的区别。
上面说的实际上是抓住概念的重要性。那么如何抓住概念。
很简单就是去找概念，总有别人定下的概念。 但是！计算机科学有其特殊之处，而且非常的独特的地方，就是，这个领域的很多概念是个体的思维抽象，其他的理论基础非常少。会出现什么问题呢，就是同样的事情，第一个发明出这个概念的人有很清晰的概念。当别人看到了这个东西或是理论以后，他会有自己的理解。这个理解就让人很头疼。有的时候，有些人的理解很形象，相比于最初的概念来说，很容易被人们普遍直观理解。但是，如果这个时候这个人对于原概念或是事物本身并没有理解的非常深刻，没有完全抓住这个事物的特点，那就会产生信息的缺失。
概念中的信息缺失是十分可怕的。
就比如你学习牛顿第一定律：一切物体再不受外力作用时,总保持匀速直线运动状态或静止状态。这是原生的概念，如果我说在一个光滑的平面上，放一个小球，不推他，他就静止在那里，推他一下他就一直保持匀速往前滚。这就是牛顿第一定律。
上面的这个表述对于一个初中生来说，确实很好理解啊。但是这个表示事实上出现了信息缺失，我说的是光滑的平面上，这并不是牛顿第一定律的特征，或者说只是符合条件的一个特殊情况。相比较原版的不受任何外力，对于这个定律的理解就会产生非常大的偏差，你可能会以为只有在平滑的平面上才是这样。
就是这样，很多时候我们想去快速的了解一个东西或概念是什么意思，于是就去问别人，或是看别人的转述，别人的理解。但是很多情况下，写下这些东西的人本身可能理解了，但是在表述上又讲不完全，导致你的理解会有问题。
所以你要去抓住概念本身，总结概念本身表述出来的特征，才能让你真正准确的理解这个问题。真正的概念和定理都是非常的简短且优美的，形式上的简单，思维上的复杂，所以需要花时间好好领悟出来。
在以前学习计算机相关的知识的时候，我会经常去看别人的博客，也能学到很多东西，但是有些时候就无法掌握一个技术点的精髓，尤其是一些算法的精髓。好在在学习算法并实现算法的过程中自己根据实践的经验也能够弥补这些不解，在实践中总结规律和特征。
在别人的博客中，学习的其实是经验，而概念，要找到源头去理解，好在那些发明了这些概念的人都还大部分建在。
触类旁通 # 任何事物和理论都不是孤立的。 计算机的很多理论都是相通的，一切的发展也都是有原因的。
当你知道了计算机的基本物理结构以后，你就应该能够想到一个程序的运行方式。计算机由运算器、控制器、存储器、输入、输出设备组成。那么代码一定是在运算器中运算，数据一定存在存储器中，程序如果要用数据一定也要从存储器中取到运算器中，从存储器到运算器之间的数据传输一定是需要时间的。所以你就知道为什么计算机要有内存和硬盘，因为要加速这个数据传输的过程。。。。
计算机的很多硬件的设计，其根源就在计算机的基本结构中。这也算是要抓住概念，抓住计算机的物理结构。 同样的很多程序在做优化的时候要优化那些东西，也都是源于硬件的差异，什么部件速度慢，什么部件速度快。
基本上从计算机的基本结构中我们可以触类旁通的拎出一串很长的技术线。
这是硬件层，我们的注意点再换个层面，从程序语言这个角度来思考。
低级的程序语言就是要操纵硬件和逻辑门，用什么来操作呢，用电压。高级的语言能不能被计算机理解，很明显不能，那为什么要有高级语言，因为要方便人的编写。那么高级语言势必要被某个东西转换成底层语言，这就是编译器的工作。怎么能让高级语言变成低级语言，这就要求高级语言一定不能太复杂，要有准确的规则，使得每句高级语言都能准确的翻译成一句底层语言而不能有二意性。
很多高级语言会有很多高级特性，比如什么动态绑定啦、继承、多态，你去想一下这些是否具有二异性，很明显没有。所以才能实现这样的高级特性。但是在我们直观来看多态本身就是要做到根据运行时的情况的不同去执行不同的代码呀，代码一经编译就是死的了，怎么实现的呢？肯定是在编译的时候加了一些控制代码，程序不可能活的。，肯定是死的。这个代码就是编译器去加的了。所以不同的语言有不同的特性，因为他们用不同的编译器嘛。
在此基础上在去理解什么设计模式，开发框架，就会简单很多。
计算机还有一个重要的分支，就是计算机网络。
从底层来说就是电信号或者是光信号转换成数字信号。所以每个设备都要具备一个转换器，有了转换器，我们就可以不去探讨物理上的问题了。回到计算机的问题。网络如何来认识目的地，肯定不能是单拉线，那么共用一个网络就要确认一下是不是到了目的地，就有了IP地址、Mac地址、路由、转发、协议等等。到了目的地怎么知道是发给哪个程序的呢？于是就有了端口，端口要实体的口嘛？当然不需要，因为你的电脑上没有那么多口嘛。
。。。
当你遇到一个上层的问题的时候，把这个问题往底层推，找到它的技术依赖点，然后你就可以懂了。
如果你看其他人的博客或是什么，他们一般会基于自己的知识，没有必要往下推问题才能理解，以为其本身很熟悉这个层次的问题，只是在这个层次去讨论，所以也不适合你去学习。
我觉得博客一定是要同一层次或者是略高一点层次的东西才有价值，过高的层次没有好的效果。
计算机科学本身 # 计算机是一门实践的科学。
在计算机中，一些工程上的设计思想其实非常简单。很多人只要逻辑思维清晰就很容易理解。这也是计算机行业的某些方面门槛很低的原因，也是很多培训机构看到的商机。
但是计算机的很多科学理论也是非常难理解的，计算机是数学、物理学、离散数学的应用。其伟大的基础并不是那么简单的逻辑就能理解的，就比如设计一门语言，并不是我们想想这样设计就能保证正确了。我们的逻辑思维虽然很智能，但是不完备，我们无法用逻辑去思考到所有的情况，为了避免逻辑上的遗漏，语言这样的设计工作都要上升到理论层面，从闭包的理论上去证明语言的正确性，也就是保证编译出来的底层语言是准确的，无二意的。举C语言的例子，语法就那么一点点，但是却几乎构建了整个计算机世界。无数人写出的千变万化的C语言代码中，没有一句话会有问题，这不是几个设计者用脑子去想出来怎么设计的，而是用理论去证明出来的。
计算机的理论可以很坚深，但是其应用也可以很简单。无论是哪一部分，都可以作出优秀的作品出来。
同时我认为计算机业界的规范还非常混乱，这样很难将经验抽象成理论，没有理论化的基础，这个科学的发展很快就会到瓶颈，因为人脑的能力有限，靠人去搞清楚这些并在记住这些东西的基础上再去发明新的东西是很浪费的。
学习计算机，关键还是要热爱，如果学着不快乐，活着有什么意义。</description>
    </item>
    
    <item>
      <title>百技</title>
      <link>https://Paladnix.github.io/posts/self/baiji/</link>
      <pubDate>Fri, 07 Jul 2017 23:20:15 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/baiji/</guid>
      <description>百技给我的另一个很大的冲击就是，让我再一次思考自己的人生在追求什么。这可能是要思考一生的问题，但问题的答案在你开始思考的那一秒，潜意识里就已经有了。 我的答案依旧是坦然的面对自己，不为可笑的虚名浪费时间。
为什么会再一次思考这个问题。其实这个问题在过去的一段时间里一直在思考，因为要做选择了嘛。选择当然就是在现实与自己之间做个平衡。参加培训的我所在的组有10个人，其中9个是研究生，我有点紧张，然后我粗略看一下现场120多人的样貌，我判断的本科生应该不超过10个。这个数据我是没有预料到的，很震惊，同时更加慌张。我想到的第一个问题是：我不会成为下一个《伤仲永》吧。不过很快我就不这么想了，因为我特么根本就不是什么天赋异禀，怎么能跟仲永做比较。然后我就更慌了，没有仲永的本事还在这玩，不太妙啊。然后通过跟大家的几天相处，我终于近距离了解了一下研究生是个什么样子的一群人？然后我又意识到，这群研究生都是很厉害的研究生啊，害怕。
学术圈的事情，本科生普遍就算了，算是全民普及教育的一部分了，研究生也搞成这样，很大程度稀释了国内学术水平，都是交易，学术民工。(或许这个时候我没有想到后来我也会去读研究生，做起了学术民工)
为什么会问这样的问题。什么样的问题呢，就是这种问题。。。如何才能平衡工作跟生活？如何成为厉害的人？有没有什么好的方法XXXXX。。。问出这样的问题的人如果自己在0.001秒内没有给自己答案的都可以回家了。如果自己0.001秒就可以的出答案的还问出来，也可以回家了。
研究生问出这样的问题，我觉得是很不应该的，所以我加了学术上。这就想讲到我对研究生这个学历的看法，不是对研究生们哦。首先一点要说的就是研究生什么年龄都是可以去读的，这在制度上是正确的，给赞。其次我认为其知识水平与思想素质水平不对等是不应该的。换句话说，一个人如果能够参透高深的知识内容，其必定也参透了一些哲学思想，或是自然之道，中国话讲大道至简。如果其强行掌握知识，也未必能在此基础上生发新生命。这貌似是国内学术圈的现状。
所以有的时候，一纸虚荣未必值得我浪费青春去求证，我也未必需要世界对我的一纸认证。但倘若我真的去了，我会践行一个学者应有的付出。 归根结底，当我面对自己的时候，不要后悔。
后记： # 2022年6月，重新来读这一篇感想。已经读完研究生，并重新入职原部门，工作8个月。
在疫情中度过了研究生生活，由于研究的方向是NLP，遇到大规模预训练模型的诞生和发展，研究工作推进的还算顺利，但是没有什么实质的成果。</description>
    </item>
    
    <item>
      <title>随想-1</title>
      <link>https://Paladnix.github.io/posts/self/thinking-1/</link>
      <pubDate>Sun, 21 May 2017 10:06:11 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/thinking-1/</guid>
      <description>最近听民谣，都是比较低沉的，各种无奈、不得志等等。。。但是这个阶段的我听了却是一脸的轻蔑。
第一首歌，听到“趁我们还年轻，还可以倔强”，我的第一反应是为什么不年轻就不可以倔强？然后想到了我的父亲，这应该是十分真实而贴切的例子了。
我真切的感受到我父亲的无奈与痛苦，所以曾经思考良久，一个男人自己与家庭是什么关系的存在？是财富收入的来源？是家庭的一份子？是家庭具有主宰地位的人？…… 我自己心中当然有我的答案。得出自己的答案永远只需要1秒钟，剩下的就是你的内心能否强大的做到这个答案。我的答案跟真理同路，跟大众心理相悖。我不认为男人跟女人之间有什么家庭分工上的区别，不存在男人就要做什么而女人就不需要做什么。有人可能会问你为什么不说不存在男人就不做什么而女人就要做什么？你这大男子主义！呵呵，现实中大家都知道，女人一旦不高兴了，还有什么做不做，男人不都特么得做吗？男人不高兴了能怎么样？排解一下、发泄一下、调整一下，回来继续该干嘛干嘛。那么，为什么？为什么会有这样的情况出现？有人说不这样的男人都被淘汰了。当然这只是一部分的人，并不是所有的男人女人都是这样，总有一批人大家都认知很清楚明了，不会做这样无聊又损人不利己的事情。
男人跟女人没什么差别，人格上没有、性别上没有、能力上也没有。有人说女人青春就那么短暂，过了那段时间就人老珠黄，而男人呢？四十还是一样反而越老越有魅力。其实这个观点就足够写一篇文章的了，今天就慢慢来扯一下。首先第一个就是为什么男人年龄大反而有魅力？为什么女人没有？这个问题我的第一反应很清晰，因为男人在社会上什么都干，生活了那么久，各个方面的能力经验财富都积累的很多，所以由内而外的散发着成熟的力量，这是真正的魅力，当然有一些各个方面都不怎么样的男人就没有这样的魅力了。然而女人嘛，如果你选择了在20多岁依靠自己的美貌获得了生活资料，那么必然就缺少了这些经验、阅历、能力等，自然当你年老色衰的时候就没办法散发这样的力量。如果你没有依靠女性特质来生活，你的人格魅力应该也是非常大的。所以在这个角度来看，大家都是一样的，你有能力，有经验，就会有魅力，而不是人种天生带有区别。一个男人年轻的时候依靠家里的财富而腹内空空，等到40岁一样是个没有魅力的中年人。当然要说一下的就是，有优势就要用，但是别依赖。最可怕的不就是别人比你聪明还比你努力吗？同样可怕的就是别人比你先天优势强，还比你更清楚自己要做什么。
另一个角度就是，女人的青春短暂，那么，男人的青春就不短暂了吗？男人也是这个年纪身体素质很强，体型最好看，精力最旺盛，过了这个阶段一样就是个中年人，他的内在可能很强，但是外在一样衰老。但是男人在这段时间做了什么，一些女人又做了什么？我认识两个女人，大我10岁，此刻都是30多的年纪了，现状截然不同，而这样的现状我曾预料到，但是当时不敢相信，后来现实印证了。一个是很骄傲、很独立、有想法有能力的女人，长的也好看；另一个就是最最一般的女人，该上学的时候没有好好上，当然另外一个也没有好好上，俩人同学。然后这个女人在生活稍微好一点的时候，就会享受生活，说享受其实不太恳切，就是对后面的事情抱着极其乐观的心态，因为挣钱的是他的男人，当经济不紧张的时候就吃吃喝喝玩玩乐乐，等到经济紧张的时候就满面愁容。另一个女人，在青春中，学习茶道，卖茶叶，谈了恋爱，分了手，但是始终经济独立，有自己的事业。此时的二人，在两个层次甚至差了两个层次。等到两个人都30多了，都开始容颜凋谢，该有魅力的人依旧碾压另一个，当然你要跟20岁的小姑娘比，颜值自然没法比，但是思想更胜一筹。从这个角度来说，男人女人一样，放在自己的同类中做对比，很现实，很多人就是自己没有自律这个东西，今天好了就天真的想象每天都好，思维目光具浅。自己付出了多少就会得到多少，别的都没用。其实这个故事中还有另外一个角色，就是这个普通女人的男人，他是个很有头脑也有能力的人，但是这个男人大这女人10岁，就是我的父亲。由于各种原因，男人要在这样的情况下工作，又没有固定的工作，工程风险很大，所以，在这种风险很大的情况下身边还有一个这样的人存在当然就特别容易出问题，这里疏漏一点那里浪费一点。所以多这个男人来说，他被拖累了。更严重的是，他们有一个小女儿，又是一个无法摆脱的负担，还有一个上大学的儿子，怎么办？还能怎么办？对这个男人来说就被加持死了，没有办法动，没有足够的资金支持他做出变动，即使所在的行业出现问题，也必须坚持到儿子大学以后才行吧。
这就是无法倔强！
他曾经有什么样的眼光、什么样的魄力和勇气，孤身进入一个新的行业，依靠自己的社交能力和头脑，自己解决机会问题，解决技术问题。我十分清楚，并且十分敬佩。但是现在的他，就是这样的无奈。心中纵使万分不服气，没办法，倔强不了。儿子要生活、女人要生活、女儿要生活，不能让他们都暂停啊，说给我一年时间我去自由打拼挣钱去。曾经我还小的时候，无所谓，我放在我奶奶家，也离婚了，自己一个人，就特么天不怕地不怕。什么是倔强，就是当我有一天想做什么事情的时候我就能去做而不是被现实加持的死死的在心里挣扎。
这需要什么？很清晰，一定的资本储备，一个人或有个贤内，一个清晰的头脑。千万不要因为一时的寂寞、一时的人性弱点就贸然做不成熟的动作，最大的表现就是不要因为寂寞就找个不适合自己的女人，这是最最最重要的。你要倔强，要自由，就得承受这些不好过，这就是代价，但是对我来说，我可以忍受寂寞，但是我无法忍受自己怂，我自己怎么失败我都认，但是如果让我因为某个人而没有尽全力而败，我会恨这个人，但是这个人是我自己选择的，怎么能恨她呢？最后还是恨自己，相当于自己做了不成熟的选择，所以不存在这样的人就不存在这样的风险。当我一个人的时候我什么时候都能吼一句：从头再来！然后哪怕几天吃不上饭又如何，我不怕。我不能低下我的倔强的头，那是我活到现在的一大支柱。
当你一个人的时候，一切都变简单了，毫无压力就往前走。生活费？不存在的，能吃饱就行，吃的自在一点也没多少钱。房子？无所谓，有个洗澡睡觉的地方就够了，大了还得打扫。人际？都是自己好兄弟，挺开心的。父母？自己的，有困难说话，没困难我要有自己的生活了。我有喜欢的东西，车、狗。攒钱去买，没钱了车可以不开，狗可以跟我一起吃我剩的。
这世界上唯一不存在的就是规则。我为什么非得用别人的做法来要求自己？那是别人的做法，那是大家认为的规则，什么没有房子就很难结婚，什么各方压力很大。那都是庸人被裹携，我为什么还要自己走进去？当然不，没有谁规定，就算有人规定没房子不能结婚，那我干嘛要结婚？也没人规定必须结婚啊。所以，没有规则。
这社会有规则，但是你有选择规则的权力。你可以选择进入一个体系，然后要与其中的规则博弈。你要看清楚你适合什么样的规则，甚至有很多规则是潜在的，隐藏的，但是你可以看出了它真实存在，你就像一个异类生活在一个体系内却用着另外一套规则跟他们博弈。这依靠的是你对社会规律的把握。你没有必要遵循大家的规则，因为大家要的东西不一样怎么能用同样的规则呢？
行业最害怕的就是践踏规则的人，因为这样的人一定成功更快而且当你意识到的时候已经无力回天，只能望尘莫及。很典型的就是当初瑞星杀毒和某杀毒软件价格竞争的如火朝天，360突然冒出来说，我不要钱，免费了。其他人还玩个屁，然后所有人都只好玩免费。有些规则可以践踏，有些可以，当你看到一条规则可以践踏的时候，就别犹豫，干了再说。
Good Luck.</description>
    </item>
    
    <item>
      <title>学习更深C/C&#43;&#43;语言之前的思想准备</title>
      <link>https://Paladnix.github.io/posts/self/before/</link>
      <pubDate>Fri, 19 May 2017 19:46:17 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/before/</guid>
      <description>从开发这个Online Judge开始到现在，我自己收获颇多。有的时候是为了这个项目去学了很多东西，有的时候是学了其他的东西刚好就用在了这个项目上。一个良性的过程就是这样，有的是目的去做，有的是无心为之，但总会带来新的峰回路转，柳暗花明。从最开始的稚嫩，连MVC的概念都不清晰，就开始写，一点点实现，写的很丑，然后就写不下去了；后来学习了Java 的MVC， 然后又偶然看到了Php的MVC，然后就开始写自己的框架，有了Husky，然后就把OJ用框架进行重构。写了一段时间后，写到了后台的判题核心，一部分是自己闭门造车，一部分借鉴了网上的思路，但是实现起来总是那么别扭，说不上的不放心。刚好在这样的情况下，又看到了一些实现的细节，有了新的思路。意识到自己的技术实力贸然开发是很不成熟的，但是，没有关系，本来就是这样，它成功了是我的成功，他不成功也不会失败，是我增长经验最重要的一次经历，我借此机会学习到了很多知识和经验。但是我一定是对此有很大的信心和决心，要做好，并且要做的更优秀，虽然可能会花费比较长的时间。
写这篇博客的时候，此时我坐在理工楼三楼的悬空阳台上吹着风，听着手机的歌，塞着耳机，桌子是暗红色，很沉稳；一字排开手机、电脑、鼠标。很少会动鼠标，更少动手机，很简洁也很舒服，优美又惬意的工作环境。
下午的时候，突然大脑进入了很奇怪的状态，突然想不起来刚刚要做什么，跑出去打了一个多小时的球，然后回来去洗澡，车忘了骑回来，裤子也被打出一条口子，整个人的状态就不对。可能最近一直都是满载运行，所以需要休息一下，然后就过来写博客了。
写这篇博客干什么呢？ 为了更好的出发。
意识到自己在C++的操作系统部分的薄弱，所以下一步就是要开始学习，以OJ的判题核心为基础，一个一个的学习下来。学习的过程与开发过程是完全不一样的，因为学习是很卡顿的过程，总是不懂，然后查，然后想，记下来。所以带着开发的节奏来学习就不行，开发的时候要一气呵成，行云流水的代码一行一行的开始码，思路很清晰，然后单元测试，几个修改，结束。就像是一切都准备好后开始做菜，一步一步几分钟就出锅了。学习的过程就不一样了，要看，要记下来，更主要的是，要实践，甚至是各种情况都要试验一下，才能熟练的掌握用法，处变不惊。
所以这篇博客就是自己跟自己谈谈心，调整一下装态和心态。同时也规划一下学习的路线。
路线： # C++中的系统进程、内存、CPU时间相关的函数用法。 C++编译器的参数使用。 C++头文件使用。 C++机器相关的常量与不同机器之间的区别。 以上是第一部分，另外就是关于如何在服务器上开设一个独立服务，监听端口。还有消息队列怎么在PHP和OJCore之间传递。 一点一点来，应该会需要1周左右的时间。
明天是5.20，此时的我毫无想法。其实大家都差不多，看谁能得偿所愿吧。或许再过一段时间，都明白了是怎么一回事，就再也不会这么傻了，那个时候就挺可笑的了。
有些事情，只有一次机会，错过了，就变成了另一种，虽然表面一样，但是实质已经不同。
Glade to see you.</description>
    </item>
    
    <item>
      <title>Begining</title>
      <link>https://Paladnix.github.io/posts/self/begining/</link>
      <pubDate>Wed, 17 May 2017 18:12:01 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/begining/</guid>
      <description>这里是新的起点。
其实没有什么特殊的事情发生，只是因为最近的状态发生了一些很微妙的变化，从一个单纯的ACMer逐渐的过渡到一个真正的程序员。开始真正的系统的接触学习计算机体系的其他的更多元的知识，去体系化的思考和学习计算机和软件体系。
有句话说的好：编程只是一门失传的艺术的再现，这门艺术就是“思考”。我很喜欢去思考或是去观摩别人的思考。每个人的程序和架构都是他思维的体现，优秀的代码总是闪着令人振奋的美感，思维之美。精巧的结构，复杂的算法，灵活的扩展，严谨的安全意识&amp;hellip; 我愿意花费时间去琢磨这些美妙的设计。
博客我曾经写过一段时间，但是觉得长得太丑，然后就转去了Latex。写了很久的Latex的文档，觉得也有点麻烦，尤其最近在写网站相关的内容， 所以又重新考虑了一下博客，然后选了Hexo这个新物种。觉得还不错。
我的博客会写些什么 # 在博客长的好看的情况下我会写很多东西，因为一旦颜值高，就会想写东西，毕竟，金玉其外败絮其中的东西总是很可笑。为了匹配这样的颜值就会想方设法的让内容充实起来。
技术 # 这个是作为程序员的基本素养，学习&amp;ndash;传播，利人利己。我不会在学习的过程中来记录学到的一知半解，因为那样的东西堆积起来没有什么意义，甚至破坏了整体的美感，我会在经过一段时间的学习和思考后来博客中系统的记录下一项技术和事件。但是有的时候我会先编写一个草稿，以免经过的时间过长我会遗漏一些比较基础或是底层的内容，造成技术文章的阅读门槛变高。我本人是不喜欢那些阅读门槛高的文章，尤其不喜欢依靠虚的名词架高理解的门槛。这样做没有什么意义。我在技术的文章中更喜欢做比喻，找一个形象化的例子加以解释。事实上很多技术都是思维的体现，思维总是来源于生活的基本认知，所以都会有形象化的解释方法，便于理解。如果有人能从我的博客中学习到比知识本身更深刻的东西，那才是我的技术文章的真正价值。知识本身只是信息，能传达信息深层的理念和设计，才是文章的作用。
生活 # 作为我的个人博客，难免会写一些我的个人境况，个人对一些技术、事件、人、物的理解和看法。我相信我是站在自己的角度上，无意对外界作出攻击或诋毁，我只是必要的心理活动的表达，更多的时候是写给自己看。他体现了我的人生观、价值观、世界观。如果有的人看了我的文章，我也很乐意分享我的看法，但是，我无意强加我的观点给任何人，一切只是一种表达，他的本意没有向外辐射的意图。我也相信我的个人博客不具备社会影响力，而是新时期技术加成后的一方思维天地。
在这一部分，有可能会涉及情感、工作、爱好等。
新的起点 # 从来没有那么一刻，你说，我就在这一刻长大了，或我就从这一刻从一个男孩变成一个男人。所以也就没有那么一刻就成了新的起点。
是因为技术方向的变更，使得我从，事实上只是较少范围的使用网络，变换到了现在这个几乎离开互联网和文档就工作不下去的状态。我自己也感受到这种微妙的，给我的心理状态带来的变化。
计算机技术就像是一个巨大的游戏机。在这其中你可以设计、使用工具去完成很多有趣的工作，自动化的处理，漂亮的界面，便捷的生活。其实每天都在玩游戏，沉迷在这个巨大的游戏机世界。在玩这些游戏的时候，会获得难得的平静，明明就在工作，其实思维已经在另一个世界。这个世界的一切都是有缘由的，有确定的规则，而这个世界产生的东西还可以加成到现实社会，最主要的是可以用来赚钱，何乐而不为。
我相信在不久的将来，几乎所有人都要具备基础的计算机知识和程序设计能力，因为这是未来社会运行的技术基础。甚至我大胆的认为，当全民都具备程序设计思维的时候，社会的精神状态将发展到一个新的时代。人将具备深刻的规则意识，并深刻认识到自身的渺小，具备合作的意识与能力。换句话说，社会进化的下一个节点，将依靠这样的技术革命进行，而不是靠文化教育。
最后，Hello World！</description>
    </item>
    
    <item>
      <title></title>
      <link>https://Paladnix.github.io/posts/self/%E4%B8%A4%E7%B1%BB%E4%BA%BA/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/%E4%B8%A4%E7%B1%BB%E4%BA%BA/</guid>
      <description> 有一些道理只流传了一半，举个例子：百善孝为先，论心不论迹，论迹天下无孝子；万恶淫为首，论迹不论心，论人世间无完人。大多数只听到的前一半，所以全都以孝行约束自己的行为。儿子尽孝放弃了自己人生的发展，父母拿着这句话心安理得。一个引申的当下的例子，都说孩子以后只要开心就好。但是如果只拿着这句话，势必会分成三类人：1. 不认同；2. 拿这个空洞的道理安慰自己，并且放弃对孩子的教诲。3. 听从了这个道理，放任自流。但是这个道理应该是孩子以后只要做他自己喜欢的事情就可以，这样就会开心，但是要认真对待自己喜欢的事情，并尽力做出优秀的成果。 </description>
    </item>
    
    <item>
      <title></title>
      <link>https://Paladnix.github.io/posts/self/%E7%A4%BE%E4%BC%9A%E5%88%86%E5%B7%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://Paladnix.github.io/posts/self/%E7%A4%BE%E4%BC%9A%E5%88%86%E5%B7%A5/</guid>
      <description>工业社会的典型特征就是精细化分工 + 全球协作。其期望达成一个高效的。（还是语音录制比较快）</description>
    </item>
    
  </channel>
</rss>
